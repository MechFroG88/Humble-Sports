swagger: "2.0"

info:
  version: '1'
  description: "A chkl sport department content management system."
  title: "Humble-Sports"
externalDocs:
  description: "Github"
  url: "https://github.com/MechFroG88/Humble-Sports/"
host:
  mechfrog88.ddns.net
basePath:
  /api
schemes:
- "http"
- "https"
paths:
  /user:
    post:
      tags:
      - "Users"
      summary: "Create new user"
      parameters:
      - in: "body"
        name: "Body"
        description: "Create new user"
        schema:
          type: "object"
          properties:
            username:
              type: "string"
              example: "admin"
            cn_name:
              type: "string"
              example: "陈科锦"
            password:
              type: "string"
              format: "password"
              example: "edrtfyuihgfdtser"
            type:
              type: "integer"
              description: "User type\n
              0 : administrator\n
              1 : user"

      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

    get:
      tags:
      - "Users"
      summary: "Returns all users data"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  example: "1"
                cn_name:
                  type: "string"
                  example: "陈科锦"
                type:
                  type: "integer"
                  description: "User type\n
                  0 : administrator\n
                  1 : user"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

  /user/password:
    put:
      tags:
      - "Users"
      summary: "Update user password"
      parameters:
      - in: "body"
        name: "Body"
        description: "Update password"
        schema:
          type: "object"
          properties:
            password:
              type: "string"
              example: "asdasd"

      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
  /user/login:
    post:
      tags:
      - "Users"
      summary : "Login"
      parameters:
      - in: "body"
        name: "Body"
        description: "Login user"
        schema:
          type: "object"
          properties:
            username:
              type: "string"
              example: "hello"
            password:
              type: "string"
              example: "asdyughsakjdn"

      responses:
        200:
          description: "Successful logged in"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

  /user/logout:
    post:
      tags:
      - "Users"
      summary : "Logout"
              
      responses:
        200:
          description: "Successful logged out"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
      
  /user/{userId}:
    get:
      tags:
      - "Users"
      summary: "Returns single user data"
      parameters:
        - name: "userId"
          in: "path"
          description: "ID of user to return"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                example: "1"
              cn_name:
                type: "string"
                example: "陈科锦"
              type:
                type: "integer"
                description: "User type\n
                0 : administrator\n
                1 : user"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

    put:
      tags:
      - "Users"
      summary: "Update user type"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of user to update"
        required: true
        type: "integer"
      - name: "Body"
        in: "body"
        schema:
          type: "object"
          properties:
            type:
              type: "integer"
              description: "User type\n
              0 : administrator\n
              1 : user"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

    delete:
      tags:
      - "Users"
      summary: "Delete user"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of user to delete"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

  /student:
    post:
      tags:
      - "Students"
      summary: "Create new user"
      parameters:
      - in: "body"
        name: "Body"
        description: "Create new user"
        schema:
          type: "object"
          properties:
            cn_name:
              type: "string"
              example: "陈科锦"
            class:
              type: "string"
              example: "6szhong"
            phone_no:
              type: "string"
              example: "012-5211843"

      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

    get:
      tags:
      - "Students"
      summary: "Returns all users data"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  example: "1"
                cn_name:
                  type: "string"
                  example: "陈科锦"
                class:
                  type: "string"
                  example: "6szhong"
                phone_no:
                  type: "string"
                  example: "012-5211843"
                picture:
                  type: "string"
                  example: "localhost/background-login.jpg"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
  /item:
    post:
      tags:
      - "Items"
      summary: "Create new items"
      parameters:
      - in: "body"
        name: "Body"
        description: "Create new items"
        schema:
          type: "object"
          properties:
            type:
              type: "string"
              example: "lanqiu"
            start_id:
              type: "integer"
              example: "2"
            end_id:
              type: "integer"
              example: "9"
            price:
              type: "integer"
              example: "10"
           
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
    
    get:
      tags:
      - "Items"
      summary: "Returns items data"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                example: "1"
              type:
                type: "string"
                example: "ball"
              start:
                type: "integer"
                example: "1"
              end:
                type: "integer"
                example: "12"
              price:
                type: "number"
                example: "13"

                           
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error" 

  /item/record/{itemId}:
    get:
      tags:
      - "Items"
      summary: "Get item rental record"
      parameters:
      - name: "itemId"
        in: "path"
        description: "Id of rental record item"
        required: true
        type: "integer"
      
      responses:
        200:
          description: "Successful logged in"
          schema:
            type: "object"
            properties:
              rent_id:
                type: "integer"
                example: "1"
              student_id:
                type: "integer"
                example: "140123"
              group_name:
                type: "string"
                example: "lanqiuxuehui"
              item_out:
                type: "string"
                format: "date-time"
                example: "2019-02-02 00:00:00"
              item_in:
                type: "string"
                format: "date-time"
                example: "2019-02-02 00:00:00"
              teacher:
                type: "string"
                example: "kelzin tan"
              status:
                type: "integer"
                example: "1"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

  /fine:
    get:
      tags: 
      - "Fines"
      summary: "Returns fine per day"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              fine:
                type: "number"
                example: "12"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
  /fine/new:
    post:
      tags:
      - "Fines"
      summary: "Change fine per day"
      parameters:
      - in: "body"
        name: "Body"
        description: "Change fine per day"
        schema:
          type: "object"
          properties:
            id:
              type: "integer"
              example: "1"
            fine:
              type: "integer"
              example: "12"
      
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

  /rent/personal:
    post:
      tags:
      - "PersonalRents"
      summary: "Create personal rent"
      parameters:
      - in: "body"
        name: "Body"
        description: "Create personal rent"
        schema:
          type: "object"
          properties:
            student_id:
              type: "integer"
              example: "140048"
            item_type:
              type: "string"
              example: "banqiu"
            item_tag:
              type: "integer"
              example: "1"
            due_date:
              type: "string"
              format: "date-time"
              example: "2018-01-29 00:41:00"
            
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
          
    get:
      tags: 
      - "PersonalRents"
      summary: "Returns all personal rents data"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                example: "1"
              student_id:
                type: "integer"
                example: "140123"              
              name:
                type: "string"
                example: "陈科锦"
              class:
                type: "string"
                example: "高二李忠"
              picture:
                type: "string"
                example: "asfcdasfcda"
              item_tag:
                type:  "integer"
                example: "1"
              item_type:
                type: "string"
                example: "yumaoqiu"
              item_in:
                type: "string"
                format: "date-time"
                example: "2019-01-31 10:27:13"
              item_out:
                type: "string"
                format: "date-time"
                example: "2019-01-31 10:37:13"
              due_date:
                type: "string"
                format: "date-time"
                example: "2019-02-01 12:25:10"
              teacher:
                type: "string"
                example: "陈恪尽"
              status:
                type: "integer"
                description: "Status\n
                0 : returned\n
                1 : unreturned\n
                2 : expired\n
                3 : lost"
            
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

  /rent/personal/{rentId}/return:  
      put:
        tags:
        - "PersonalRents"
        summary: "Update personal rent returned"
        parameters:
          - name: "rentId"
            in: "path"
            description: "Id of personal rent to update"
            required: true
            type: "integer"
          - in: "body"
            name: "Body"
            description: "Update personal rent returned"
            schema: 
              type: "object"
              properties:
                id:
                  type: "integer"
                  example: "1"
                status:
                  type: "integer"
                  description: "Status\n
                  0 : returned\n
                  1 : unreturned\n
                  2 : expired\n
                  3 : lost"

        responses:
          200:
            description: "Successful operation"
          401:
            description: "Unauthorized"
          400:
            description: "Validation Error"
            
  /rent/personal/{rentId}/lost:  
      put:
        tags:
        - "PersonalRents"
        summary: "Update personal rent lost"
        parameters:
          - name: "rentId"
            in: "path"
            description: "Id of personal rent to update"
            required: true
            type: "integer"
          - in: "body"
            name: "Body"
            description: "Update personal rent lost"
            schema: 
              type: "object"
              properties:
                id:
                  type: "integer"
                  example: "1"
                status:
                  type: "integer"
                  description: "Status\n
                  0 : returned\n
                  1 : unreturned\n
                  2 : expired\n
                  3 : lost"

        responses:
          200:
            description: "Successful operation"
          401:
            description: "Unauthorized"
          400:
            description: "Validation Error"       

  /rent/personal/expired:  
      put:
        tags:
        - "PersonalRents"
        summary: "Update personal rent expired"
        parameters:
          - in: "body"
            name: "Body"
            description: "Update personal rent expired"
            schema: 
              type: "object"
              properties:
                id:
                  type: "integer"
                  example: "1"
                status:
                  type: "integer"
                  description: "Status\n
                  0 : returned\n
                  1 : unreturned\n
                  2 : expired\n
                  3 : lost"

        responses:
          200:
            description: "Successful operation"
          401:
            description: "Unauthorized"
          400:
            description: "Validation Error" 
            
  /rent/group:
    post:
      tags:
      - "GroupRents"
      summary: "Create group rent"
      parameters:
      - in: "body"
        name: "Body"
        description: "Create group rent"
        schema:
          type: "object"
          properties:
            group_name:
              type: "string"
              example: "篮球"
            student_id:
              type: "integer"
              example: "140048"
            phone:
              type: "integer"
              example: "0123456789"
            item_type:
              type: "string"
              example: "lanqiu"
            item_tag:
              type: "integer"
              example: "1"
            due_date:
              type: "string"
              format: "date-time"
              example: "2018-01-29 00:41:00"
            
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
    
    get:
      tags:
      - "GroupRents"
      summary: "Returns all group rents data"
        
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              group_name:
                type: "string"
                example: "篮球"
              student_id:
                type: "integer"
                example: "140048"
              name:
                type: "string"
                example: "陈智林"
              phone:
                type: "integer"
                example: "0123456789"
              item_type:
                type: "string"
                example: "zuqiu"
              item_tag:
                type: "integer"
                example: "1"
              item_in:
                type: "string"
                format: "date-time"
                example: "2018-01-29 00:41:00"
              item_out:
                type: "string"
                format: "date-time"
                example: "2018-01-29 00:41:00"
              due_date:
                type: "string"
                format: "date-time"
                example: "2018-01-29 00:41:00"
              teacher:
                type: "string"
                example: "陈恪尽"
              status:
                type: "integer"
                description: "Status\n
                  0 : returned\n
                  1 : unreturned\n
                  2 : expired\n
                  3 : lost"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

  /rent/group/{rentId}/return:  
      put:
        tags:
        - "GroupRents"
        summary: "Update group rent returned"
        parameters:
          - name: "rentId"
            in: "path"
            description: "Id of group rent to update"
            required: true
            type: "integer"
          - in: "body"
            name: "Body"
            description: "Update group rent returned"
            schema: 
              type: "object"
              properties:
                id:
                  type: "integer"
                  example: "1"
                status:
                  type: "integer"
                  description: "Status\n
                  0 : returned\n
                  1 : unreturned\n
                  2 : expired\n
                  3 : lost"

        responses:
          200:
            description: "Successful operation"
          401:
            description: "Unauthorized"
          400:
            description: "Validation Error"
            
  /rent/group/{rentId}/lost:  
      put:
        tags:
        - "GroupRents"
        summary: "Update group rent lost"
        parameters:
          - name: "rentId"
            in: "path"
            description: "Id of group rent to update"
            required: true
            type: "integer"
          - in: "body"
            name: "Body"
            description: "Update group rent lost"
            schema: 
              type: "object"
              properties:
                id:
                  type: "integer"
                  example: "1"
                lost:
                  type: "integer"
                  example: "2"
                status:
                  type: "integer"
                  description: "Status\n
                  0 : returned\n
                  1 : unreturned\n
                  2 : expired\n
                  3 : lost"

        responses:
          200:
            description: "Successful operation"
          401:
            description: "Unauthorized"
          400:
            description: "Validation Error"       

  /rent/group/expired:  
      put:
        tags:
        - "GroupRents"
        summary: "Update group rent expired"
        parameters:
          - in: "body"
            name: "Body"
            description: "Update group rent expired"
            schema: 
              type: "object"
              properties:
                id:
                  type: "integer"
                  example: "1"
                status:
                  type: "integer"
                  description: "Status\n
                  0 : returned\n
                  1 : unreturned\n
                  2 : expired\n
                  3 : lost"

        responses:
          200:
            description: "Successful operation"
          401:
            description: "Unauthorized"
          400:
            description: "Validation Error" 

  /receipt/personal/fine/{rentId}:
    post:
      tags:
      - "PersonalReceipts"
      summary: "Create new personal receipt for fine"
      parameters:
        - name: "rentId"
          in: "path"
          description: "ID of personal rent to create receipt"
          required: true
          type: "integer"
      
      responses:
        200: 
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
  
  /receipt/personal/lost/{rentId}:    
    post:
      tags:
      - "PersonalReceipts"
      summary: "Create new personal receipt for lost"
      parameters:
        - name: "rentId"
          in: "path"
          description: "ID of personal rent to create receipt"
          required: true
          type: "integer"
      
      responses:
        200: 
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"    
  
  /receipt/personal/{receiptId}:
    get:
      tags:
      - "PersonalReceipts"
      summary: "Returns single receipt data"
      parameters:
        - name: "receiptId"
          in: "path"
          description: "ID of receipt to return"
          required: true
          type: "integer"
      
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              student_id:
                type: "integer"
                example: "130047"
              cn_name:
                type: "string"
                example: "黄咏志"
              item_out:
                type: "string"
                format: "date-time"
                example: "2018-01-29 00:41:00"
              item_in:
                type: "string"
                format: "date-time"
                example: "2018-01-29 00:41:00"
              days:
                type: "integer"
                example: "1"
              fine:
                type: "integer"
                example: "10"
              total:
                type: "integer"
                example: "10"
              item_type:
                type: "string"
                example: "lanqiu"
              teacher:
                type: "string"
                example: "ahdong"
            
  /receipt/group/fine/{rentId}:
    post:
      tags:
      - "GroupReceipts"
      summary: "Create new group receipt for fine"
      parameters:
        - name: "rentId"
          in: "path"
          description: "ID of group rent to create receipt"
          required: true
          type: "integer"
      
      responses:
        200: 
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
  
  /receipt/group/lost/{rentId}:    
    post:
      tags:
      - "GroupReceipts"
      summary: "Create new group receipt for lost"
      parameters:
        - name: "rentId"
          in: "path"
          description: "ID of group rent to create receipt"
          required: true
          type: "integer"
      
      responses:
        200: 
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"    
  
  /receipt/group/{receiptId}:
    get:
      tags:
      - "GroupReceipts"
      summary: "Returns single receipt data"
      parameters:
        - name: "receiptId"
          in: "path"
          description: "ID of receipt to return"
          required: true
          type: "integer"
      
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              student_id:
                type: "integer"
                example: "130047"
              cn_name:
                type: "string"
                example: "黄咏志"
              item_out:
                type: "string"
                format: "date-time"
                example: "2018-01-29 00:41:00"
              item_in:
                type: "string"
                format: "date-time"
                example: "2018-01-29 00:41:00"
              days:
                type: "integer"
                example: "1"
              fine:
                type: "integer"
                example: "10"
              total:
                type: "integer"
                example: "10"
              item_type:
                type: "string"
                example: "lanqiu"
              teacher:
                type: "string"
                example: "ahdong"                
  
  /report:
    get:
      tags:
      - "Report"
      summary: "Returns report data"
      
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              unreturned:
                type: "integer"
                example: "21"
              lost:
                type: "integer"
                example: "10"
              expired:
                type: "integer"
                example: "30"
              paid_fine_count:
                type: "integer"
                example: "50"
              paid_fine:
                type: "integer"
                example: "12000"
              paid_lost_count:
                type: "integer"
                example: "20"
              paid_lost:
                type: "integer"
                example: "20000"
              year:
                type: "object"
                properties:
                  2019:
                    type: "object"
                    properties:
                      1:
                        type: "integer"
                        example: "2"
                  
                  2020:
                    type: "object"
                    properties:
                      1:
                        type: "integer"
                        example: "20"

                          
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"